<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MarlinComunicationHelper</name>
    </assembly>
    <members>
        <member name="P:MarlinComunicationHelper.Position.Xstring">
            <summary>
             Set and Get X position as string
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.Position.Ystring">
            <summary>
             Set and Get Y position as string
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.Position.Zstring">
            <summary>
             Set and Get Z position as string
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.FrmShowCommunication.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.FrmShowCommunication.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MarlinComunicationHelper.FrmShowCommunication.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.KompassControll.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.KompassControll.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MarlinComunicationHelper.KompassControll.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MarlinComunicationHelper.LedBulb">
            <summary>
                The LEDBulb is a .Net control for Windows Forms that emulates an
                LED light with two states On and Off.  The purpose of the control is to
                provide a sleek looking representation of an LED light that is sizable,
                has a transparent background and can be set to different colors.
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.LedBulb.Color">
            <summary>
                Gets or Sets the color of the LED light
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.LedBulb.DarkColor">
            <summary>
                Dark shade of the LED color used for gradient
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.LedBulb.DarkDarkColor">
            <summary>
                Very dark shade of the LED color used for gradient
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.LedBulb.On">
            <summary>
                Gets or Sets whether the light is turned on
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.LedBulb.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
                Handles the Paint event for this UserControl
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.LedBulb.drawControl(System.Drawing.Graphics,System.Boolean)">
            <summary>
                Renders the control to an image
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.LedBulb.Blink(System.Int32)">
            <summary>
                Causes the Led to start blinking
            </summary>
            <param name="milliseconds">Number of milliseconds to blink for. 0 stops blinking</param>
        </member>
        <member name="T:MarlinComunicationHelper.MarlinCommunication">
            <summary>
            Class that do all communication thru ZylSerial 
            </summary>
        </member>
        <member name="T:MarlinComunicationHelper.MarlinCommunication.Feature">
            <summary>
            Used to communicate the ongoing feature. 
            Use done when the feature is finished
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.Done">
            <summary>
            Done = The feature is Done
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.EndStop">
            <summary>
            The Feature is testing Endstops
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.Bedlevel">
            <summary>
            Feature is trying to do a Bedlevel
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.SurfaceScan">
            <summary>
            Doing Surface Scan
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.AutoBedLevel">
            <summary>
            Process that do AutoBedLevel
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.GetMeshBedPoints">
            <summary>
            Learning where the FW do the MBL points
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.MeassureMesh">
            <summary>
            Meassure the MBL points using the probe
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.AutomaticMeshBedLevel">
            <summary>
            Do the process of Automatic MBL
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.ZprobeHeight">
            <summary>
            Calculating ZprobeHeight
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.MarlinCommunication.Feature.SearchLift">
            <summary>
            Search extra safety Lift of the probe
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.ZprobeOffset">
            <summary>
            The ZprobeOffset that is found in M851
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.StepsPerUnitX">
            <summary>
            The Steps per Unit X that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.StepsPerUnitY">
            <summary>
            The Steps per Unit Y that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.StepsPerUnitZ">
            <summary>
            The Steps per Unit Z that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.StepsPerUnitE">
            <summary>
            The Steps per Unit E that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.PidExtruderKp">
            <summary>
            The PidExtruder Kp that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.PidExtruderKi">
            <summary>
            The PidExtruder Ki that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.PidExtruderKd">
            <summary>
            The PidExtruder Kd that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.PidBedKp">
            <summary>
            The PidBed Kp that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.PidBedKi">
            <summary>
            The PidBed Ki that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.PidBedKd">
            <summary>
            The PidBed Kd that is found during INIT
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.ProbeM48MeanValue">
            <summary>
            The mean value of a M48
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.Status">
            <summary>
            The feature that is processing
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.CurrentPosition">
            <summary>
            The current position that are parsed from many GCODE
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.EndStopStatus">
            <summary>
            The staus of all endstops
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.Kill">
            <summary>
                Kill the commandstream at next command
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.Gcode">
            <summary>
                The Gcode without argument
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.BaudRate">
            <summary>
                Baudrate
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.Port">
            <summary>
                Set the serial com port from a string like COM10
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.ProbeResponceList">
            <summary>
            All the proberesponces from a features ( many G30 )
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.IsPortOpen">
            <summary>
                If the serial port is open
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.MarlinCommunication.Showform">
            <summary>
            Show a form of the communication and allow send commands
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.Temperatures">
            <summary>
                Eventhandler for Tempertatures
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.Connect">
            <summary>
            Connect and get the INIT without events..
            Timeout on first responce is 10s
            The following has 4s (Test of SD is slow)
            
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.DisConnect">
            <summary>
            Close the Comport and wait for it to be done
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.GetExistingSerialPorts">
            <summary>
            Get the existing Comports
            </summary>
            <returns></returns>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.ClearCommunication">
            <summary>
            Clear the communication
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.SendCommand(System.String)">
            <summary>
            Send a single GCODE. Check for each command if Kill signal is received
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.SendCommand(System.Collections.Generic.List{System.String})">
            <summary>
            Send a list of commands . Each command uses SendCommand with the single GCODE
            </summary>
            <param name="commands"></param>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.ExtrudeCalculationUpdate(System.Int32,System.Double,System.Int32,System.Boolean)">
            <summary>
                Update the uploaded Firmware with new calibrated value
            </summary>
            <param name="extrude">Amount of extruded filament in the test</param>
            <param name="oldSteps">Value for Steps-per-mm before the test</param>
            <param name="meassuredUsedFilament">Meassured filament that is used during the test</param>
            <param name="updateEEprom">If the new Steps-Per-mm  should update the EEPROM</param>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.Connected">
            <summary>
            Event when the ZylSerial is connected
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.DisConnected">
            <summary>
            Event when ZylSerial is disConnected
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.M119EndStopStatus">
            <summary>
                Eventhandler for M119 EndstopStatus
            </summary>
            TODO: EndstopStatusList -> EndstopStatus
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.OnM119EndStopStatus(MarlinComunicationHelper.EndstopStatus)">
            <summary>
                Report result of M119 EndstopStatus
            </summary>
            <param name="endstopStatusList"></param>
            TODO: EndstopStatusList -> EndstopStatus
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.M301Responce">
            <summary>
                Eventhandler for M301
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.M303Responce">
            <summary>
                Eventhandler for M119 EndstopStatus
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.M304Responce">
            <summary>
                Eventhandler for M304
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.M500Responce">
            <summary>
                Eventhandler for M500
            </summary>
        </member>
        <member name="E:MarlinComunicationHelper.MarlinCommunication.M501Responce">
            <summary>
                Eventhandler for M501
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.MarlinCommunication.ClearReceived">
            <summary>
                Clear all data in the received buffer
            </summary>
        </member>
        <member name="T:MarlinComunicationHelper.EndstopStatus">
            <summary>
                Endstop Argument
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.EndstopStatus.#ctor(MarlinComunicationHelper.EndStop)">
            <summary>
            Endstop Status
            </summary>
            <param name="endstop"></param>
        </member>
        <member name="P:MarlinComunicationHelper.EndstopStatus.Status">
            <summary>
            The status for all endstops
            </summary>
        </member>
        <member name="T:MarlinComunicationHelper.EndStop">
            <summary>
            Endstop with the status of all endstops
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.EndStop.Xmin">
            <summary>
            status for Xmin
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.EndStop.Xmax">
            <summary>
            status for Xmax
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.EndStop.Ymin">
            <summary>
            status for Ymin
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.EndStop.Ymax">
            <summary>
            status for Ymax
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.EndStop.Zmin">
            <summary>
            status for Zmin
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.EndStop.Zmax">
            <summary>
            status for Zmax
            </summary>
        </member>
        <member name="T:MarlinComunicationHelper.Temperatures">
            <summary>
                Temperature
            </summary>
        </member>
        <member name="T:MarlinComunicationHelper.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MarlinComunicationHelper.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="F:MarlinComunicationHelper.VerticalJogControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MarlinComunicationHelper.VerticalJogControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MarlinComunicationHelper.VerticalJogControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
